{"version":3,"sources":["components/store/kanban/reducer.js","components/store/kanban/action.js","components/cards/BacklogCard.js","components/cards/TodoCard.js","components/cards/ProgressCard.js","components/cards/FinishedCard.js","components/board/KanbanBoard.js","components/store/index.js","components/ProtectedRoute.jsx","components/Login/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","validation","isLoggedIn","username","backlog","id","title","desc","todo","progress","finished","actionSwitch","toTodo","type","data","toProgress","deleteTask","backlogId","BacklogCards","kanban","useState","show","setShow","handleClose","dispatch","useDispatch","Container","Row","Col","Card","border","style","marginTop","width","Body","padding","boxShadow","onClick","position","marginLeft","cursor","Modal","onHide","Header","Title","Form","onSubmit","e","preventDefault","formId","target","value","Group","className","Label","Control","placeholder","name","Button","variant","Text","size","backlogObject","TodoCard","backToBacklog","todoObject","ProgressCard","onFinished","progressObject","FinishedCard","finishedObject","KanbanBoard","kanbanBacklog","useSelector","state","kanbanTodo","kanbanProgress","kanbanFinished","users","classes","makeStyles","theme","avatar","margin","spacing","backgroundcColor","backgroundImage","color","backgroundColor","root","flexGrow","menuButton","marginRight","useStyles","auth","anchorEl","setAnchorEl","open","Boolean","useHistory","AppBar","Toolbar","Typography","IconButton","currentTarget","Avatar","charAt","toUpperCase","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","event","newTask","autoIncrementId","length","justifyContent","alignItems","map","dataBacklog","index","BacklogCard","dataTodo","dataProgress","dataFinished","store","createStore","combineReducers","action","backlogs","filter","todos","progresses","finishes","clear","composeWithDevTools","ProtectedRoute","path","Component","component","props","render","to","Centered","display","height","CustomPaper","withStyles","flexDirection","Paper","LoginContainer","MuiInputLabel","outlined","transform","Login","setUsername","password","setPassword","history","a","item","fetch","method","headers","body","JSON","stringify","push","login","TextField","onChange","fullWidth","label","createBrowserHistory","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7641f3eb.chunk.js","sourcesContent":["const initialState = {\r\n    validation: true,\r\n    isLoggedIn: false,\r\n    username: '',\r\n    backlog: [{\r\n        id: 1,\r\n        title: 'Ngoding malam',\r\n        desc: 'dirumah aja'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Ngoding siang',\r\n        desc: 'dikantor'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Ngoding pagi',\r\n        desc: 'diteras'\r\n    }],\r\n\r\n    todo: [{\r\n        id: 4,\r\n        title: 'Makan',\r\n        desc: 'diwarteg'\r\n    }],\r\n\r\n    progress: [{\r\n        id: 5,\r\n        title: 'Jajan',\r\n        desc: 'diwarung'\r\n    }],\r\n\r\n    finished: [{\r\n        id: 6,\r\n        title: 'Renang',\r\n        desc: 'dikolam'\r\n    }]\r\n}\r\n\r\nexport const actionSwitch = {\r\n    ADD_TASK: 'ADD_TASK',\r\n    EDIT_TASK: 'EDIT_TASK',\r\n    TO_BACKLOG: 'TO_BACKLOG',\r\n    TO_TODO: 'TO_TODO',\r\n    TO_PROGRESS: 'TO_PROGRESS',\r\n    TO_FINISHED: 'TO_FINISHED',\r\n    DELETE_TASK: 'DELETE_TASK',\r\n    USER_LOGIN: 'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionSwitch.USER_LOGIN: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                username: action.data.username\r\n            }\r\n        }\r\n        case actionSwitch.USER_LOGOUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                username: ''\r\n            }\r\n        }\r\n        case actionSwitch.ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                backlog: [...state.backlog, action.data]\r\n            }\r\n        }\r\n        case actionSwitch.EDIT_TASK: {\r\n            return {\r\n                ...state,\r\n                backlog: state.backlog.map((backlogs) => {\r\n                    if(backlogs.id === action.data.id){\r\n                        return {\r\n                            ...backlogs,\r\n                            title: action.data.title,\r\n                            desc: action.data.desc\r\n                        }\r\n                    } else {\r\n                        return backlogs\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case actionSwitch.TO_BACKLOG: {\r\n            return {\r\n                ...state,\r\n                todo: state.todo.filter((todos) => todos.id !== action.data.id),\r\n                backlog: [...state.backlog, action.data]\r\n            }\r\n        }\r\n        case actionSwitch.TO_TODO: {\r\n            return {\r\n                ...state,\r\n                backlog: state.backlog.filter((backlogs) => backlogs.id !== action.data.id),\r\n                progress: state.progress.filter((progresses) => progresses.id !== action.data.id),\r\n                todo: [...state.todo, action.data]\r\n            }\r\n        }\r\n        case actionSwitch.TO_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                todo: state.todo.filter((progresses) => progresses.id !== action.data.id),\r\n                finished: state.finished.filter((finishes) => finishes.id !== action.data.id),\r\n                progress: [...state.progress, action.data]\r\n            }\r\n        }\r\n        case actionSwitch.TO_FINISHED: {\r\n            return {\r\n                ...state,\r\n                progress: state.progress.filter((progresses) => progresses.id !== action.data.id),\r\n                finished: [...state.finished, action.data]\r\n            }\r\n        }\r\n        case actionSwitch.DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                backlog: state.backlog.filter((backlogs) => backlogs.id !== action.data.id),\r\n                finished: state.finished.filter((clear) => clear.id !== action.data.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { actionSwitch } from \"./reducer\";\r\n\r\nexport const login = (username, password) => {\r\n    return {\r\n        type: actionSwitch.USER_LOGIN,\r\n        data: { username, password },\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionSwitch.USER_LOGOUT,\r\n    }\r\n}\r\n\r\nexport const addTask = (newTask) => {\r\n    return {\r\n        type: actionSwitch.ADD_TASK,\r\n        data: newTask\r\n    }\r\n}\r\n\r\nexport const editTask = (id, title, desc) => {\r\n    return {\r\n        type: actionSwitch.EDIT_TASK,\r\n        data: id,\r\n              title,\r\n              desc,\r\n    }\r\n}\r\n\r\nexport const toTodo = (id, title, desc) => {\r\n    return {\r\n        type: actionSwitch.TO_TODO,\r\n        data: id, \r\n              title,\r\n              desc,\r\n        \r\n    }\r\n}\r\n\r\nexport const toBacklog = (id, title, desc) => {\r\n    return {\r\n        type: actionSwitch.TO_BACKLOG,\r\n        data: id, \r\n              title,\r\n              desc,\r\n    }\r\n}\r\n\r\nexport const toProgress = (id, title, desc) => {\r\n    return {\r\n        type: actionSwitch.TO_PROGRESS,\r\n        data: id,\r\n              title, \r\n              desc,\r\n    }\r\n}\r\n\r\nexport const toFinished = (id, title, desc) => {\r\n    return {\r\n        type: actionSwitch.TO_FINISHED,\r\n        data: id,\r\n              title,\r\n              desc,\r\n    }\r\n}\r\n\r\nexport const deleteTask = (backlogId) => {\r\n    return {\r\n        type: actionSwitch.DELETE_TASK,\r\n        data: {\r\n            id: backlogId\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Card, Row, Container, Button, Modal, Form, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteTask, editTask, toTodo } from '../store/kanban/action'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nfunction BacklogCards(kanban) {\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const dispatch = useDispatch()\r\n\r\n    function onDelete(backlogObject){\r\n        dispatch(deleteTask(backlogObject))\r\n    }\r\n\r\n    function onTodo(backlogObject){\r\n        dispatch(toTodo(backlogObject))\r\n    }\r\n\r\n    // const prototype = () => {\r\n    //     const autoIncrementId = kanban.backlog.id\r\n    //     console.log(autoIncrementId);\r\n    // }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const formId = kanban.backlog.id\r\n        if(formId){\r\n            dispatch(editTask({\r\n                id: formId,\r\n                title: e.target[0].value,\r\n                desc: e.target[1].value\r\n            }))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Container>\r\n            <Row>\r\n                <Col>\r\n                <Card border=\"light\" style={{ marginTop: '1rem', width: '15rem' }}>\r\n                    <Card.Body style={{ padding: '1rem', boxShadow: '0px 0px 10px -5px #9e9e9e' }}>\r\n                    <EditIcon onClick={handleShow} style={{position: 'absolute', marginLeft: '11.2rem', cursor: 'pointer'}} />\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header>\r\n                        <Modal.Title>Add Task</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form onSubmit={handleEdit}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Task</Form.Label>\r\n                                    <Form.Control placeholder={kanban.backlog.title} type=\"text\" name=\"title\"/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-5\">\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control placeholder={kanban.backlog.desc} type=\"text\" name=\"desc\"/>\r\n                                </Form.Group>\r\n                                <Button onClick={() => handleClose()} variant=\"primary\" type=\"submit\" value=\"Submit\">\r\n                                    Save Changes\r\n                                </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                        <Card.Title>\r\n                            {kanban.backlog.title}\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {kanban.backlog.desc}\r\n                        </Card.Text>\r\n                        <Card.Body className=\"text-center\">\r\n                            {/* <Button onClick={prototype}>click</Button> */}\r\n                            <Button variant=\"danger\" size='sm' onClick={() => onDelete(kanban.backlog.id)}>Delete</Button>\r\n                            {' '}\r\n                            <Button variant=\"success\" size='sm' onClick={() => onTodo(kanban.backlog)}>Todo</Button>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BacklogCards\r\n","import React from 'react'\r\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toBacklog, toProgress } from '../store/kanban/action'\r\n\r\nfunction TodoCard(kanban) {\r\n    // const todoObject = useSelector((state)s => state.kanban.todo)\r\n    const dispatch = useDispatch()\r\n\r\n    function onProgress(todoObject){\r\n        dispatch(toProgress(todoObject))\r\n    }\r\n\r\n    function backToBacklog(todoObject){\r\n        dispatch(toBacklog(todoObject))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <Row>\r\n                <Col>\r\n                <Card border=\"light\" style={{ marginTop: '1rem', width: '15rem' }}>\r\n                    <Card.Body style={{ padding: '1rem', boxShadow: '0px 0px 10px -5px #9e9e9e' }}>\r\n                        <Card.Title>\r\n                            {kanban.todo.title}\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {kanban.todo.desc}\r\n                        </Card.Text>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Button variant=\"danger\" size='sm' onClick={() => backToBacklog(kanban.todo)}>Backlog</Button>\r\n                            {' '}\r\n                            <Button variant=\"success\" size='sm' onClick={() => onProgress(kanban.todo)}>Doing</Button>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoCard\r\n","import React from 'react'\r\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toFinished, toTodo } from '../store/kanban/action'\r\n\r\nfunction ProgressCard(kanban) {\r\n    // const progressObject = useSelector((state) => state.kanban.progress)\r\n    const dispatch = useDispatch()\r\n\r\n    function onTodo(progressObject){\r\n        dispatch(toTodo(progressObject))\r\n    }\r\n\r\n    function onFinished(progressObject){\r\n        dispatch(toFinished(progressObject))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <Row>\r\n                <Col>\r\n                <Card border=\"light\" style={{ marginTop: '1rem', width: '15rem' }}>\r\n                    <Card.Body style={{ padding: '1rem', boxShadow: '0px 0px 10px -5px #9e9e9e' }}>\r\n                        <Card.Title>\r\n                            {kanban.progress.title}\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {kanban.progress.desc}\r\n                        </Card.Text>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Button variant=\"danger\" size='sm' onClick={() => onTodo(kanban.progress)}>Todo</Button>\r\n                            {' '}\r\n                            <Button variant=\"success\" size='sm' onClick={() => onFinished(kanban.progress)}>Finished</Button>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressCard\r\n","import React from 'react'\r\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteTask, toProgress } from '../store/kanban/action'\r\n\r\nfunction FinishedCard(kanban){\r\n    // const finishedObject = useSelector((state) => state.kanban.finished)\r\n    const dispatch = useDispatch()\r\n\r\n    function onDelete(finishedObject) {\r\n        dispatch(deleteTask(finishedObject))\r\n    }\r\n\r\n    function onProgress(finishedObject){\r\n        dispatch(toProgress(finishedObject))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <Row>\r\n                <Col>\r\n                <Card border=\"light\" style={{ marginTop: '1rem', width: '15rem' }}>\r\n                    <Card.Body style={{ padding: '1rem', boxShadow: '0px 0px 10px -5px #9e9e9e' }}>\r\n                        <Card.Title>\r\n                            {kanban.finished.title}\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {kanban.finished.desc}\r\n                        </Card.Text>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Button variant=\"danger\" size='sm' onClick={() => onProgress(kanban.finished)}>Progress</Button>\r\n                            {' '}\r\n                            <Button variant=\"success\" size='sm' onClick={() => onDelete(kanban.finished.id)}>Clear</Button>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedCard\r\n","import React, { useState } from 'react'\r\nimport { Card, Row, Container, Button, Modal, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BacklogCards from '../cards/BacklogCard';\r\nimport TodoCard from '../cards/TodoCard';\r\nimport ProgressCard from '../cards/ProgressCard';\r\nimport FinishedCard from '../cards/FinishedCard';\r\nimport { addTask, logout } from '../store/kanban/action';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { Avatar, makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Scroll.css'\r\n\r\nfunction KanbanBoard() {\r\n    \r\n    const kanbanBacklog = useSelector((state) => state.kanban.backlog)\r\n    const kanbanTodo = useSelector((state) => state.kanban.todo)\r\n    const kanbanProgress = useSelector((state) => state.kanban.progress)\r\n    const kanbanFinished = useSelector((state) => state.kanban.finished)\r\n    const users = useSelector((state) => state.kanban.username)\r\n    // const valid = useSelector((state) => state.kanban.validation)\r\n    \r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const dispatch = useDispatch()\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        avatar: {\r\n                margin: theme.spacing(1),\r\n                backgroundcColor: '#0093E9',\r\n                backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)'\r\n        },\r\n        color: {\r\n                backgroundColor: '#0093E9',\r\n                backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)'\r\n        },\r\n        root: {\r\n            flexGrow: 1,\r\n          },\r\n          menuButton: {\r\n            marginRight: theme.spacing(2),\r\n          },\r\n          title: {\r\n            flexGrow: 1,\r\n          },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    const [auth, setAuth] = useState(true);\r\n      const [anchorEl, setAnchorEl] = useState(null);\r\n      const open = Boolean(anchorEl);\r\n      const history = useHistory()\r\n      \r\n      const handleMenu = (e) => {\r\n          setAnchorEl(e.currentTarget)\r\n        };\r\n        \r\n        const handleCloseSecond = () => {\r\n            setAnchorEl(null);\r\n        };\r\n        \r\n        function handleLogout(event){\r\n            dispatch(logout(event))\r\n        }\r\n        \r\n        // const handleValidation = (e) => {\r\n        //     if(e.target.value !== \"\"){\r\n        //         alert(\"Valid\")\r\n        //     }\r\n        // }\r\n\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault()\r\n            const autoIncrementId = kanbanBacklog.length\r\n            dispatch(addTask({id: autoIncrementId + 1,\r\n                title: e.target[0].value, \r\n                desc: e.target[1].value}))   \r\n        }\r\n        \r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Kanban Board\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\">\r\n                            <Avatar className={classes.avatar}>{users.charAt(0).toUpperCase()}</Avatar>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleCloseSecond}\r\n                        >\r\n                            <MenuItem onClick={handleShow}>Add Task</MenuItem>\r\n                            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                        </Menu>\r\n                        </div>\r\n                    )}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        \r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header>\r\n                <Modal.Title>Add Task</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Task</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"title\" placeholder=\"What are you gonna do today?\"/>\r\n                            <Form.Text className=\"text-muted\">\r\n                            Let's get productive today!\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-5\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"desc\" placeholder=\"Description\"/>\r\n                        </Form.Group>\r\n                        {/* <Button onClick={handleValidation}>click</Button> */}\r\n                        <Button onClick={handleClose} variant=\"primary\" type=\"submit\" value=\"Submit\">\r\n                            Add to Backlog\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Container style={{ marginTop: '2rem' }}>\r\n                <Row style={{ justifyContent: 'center'}}>\r\n\r\n                    <Card style={{ width: '16rem', border: 'none', alignItems: 'center'}}>\r\n                    <Card.Header style={{backgroundColor: '#f30', color: '#fff'}}>Backlog</Card.Header>\r\n                    {kanbanBacklog.map((dataBacklog, index) => {\r\n                        return <BacklogCards key={index} backlog={dataBacklog} />\r\n                    })}\r\n                    </Card>\r\n\r\n                    <Card style={{ width: '16rem', border: 'none', alignItems: 'center'}}>\r\n                    <Card.Header style={{backgroundColor: '#f90', color: '#fff'}}>Todo</Card.Header>\r\n                    {kanbanTodo.map((dataTodo, index) => {\r\n                        return <TodoCard key={index} todo={dataTodo} />\r\n                    })}\r\n                    </Card>\r\n\r\n                    <Card style={{ width: '16rem', border: 'none', alignItems: 'center'}}>\r\n                    <Card.Header style={{backgroundColor: '#39f', color: '#fff'}}>Progress</Card.Header>\r\n                    {kanbanProgress.map((dataProgress, index) => {\r\n                        return <ProgressCard key={index} progress={dataProgress} />\r\n                    })}\r\n                    </Card>\r\n\r\n                    <Card style={{ width: '16rem', border: 'none', alignItems: 'center'}}>\r\n                    <Card.Header style={{backgroundColor: '#0c6', color: '#fff'}}>Finished</Card.Header>\r\n                    {kanbanFinished.map((dataFinished, index) => {\r\n                        return <FinishedCard key={index} finished={dataFinished} />\r\n                    })}\r\n                    </Card>\r\n                    \r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default KanbanBoard\r\n","import { createStore, combineReducers } from \"redux\"\r\nimport kanban from './kanban/reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(combineReducers({ kanban }),\r\ncomposeWithDevTools())\r\n\r\nexport default store","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport default function ProtectedRoute({ path, component: Component, ...props}) {\r\n    const isLoggedIn = useSelector((state) => state.kanban.isLoggedIn)\r\n\r\n    return (\r\n        <div>\r\n            <Route {...props} path={path} render={(props) =>\r\n                isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }/>\r\n        </div>\r\n    )\r\n}\r\n","import { Paper, TextField, Button, withStyles, Typography, makeStyles } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../store/kanban/action';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Centered = (props) => (\r\n    <div {...props} style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: 'calc(100vh - (64px + 24px))'}}/>\r\n);\r\n\r\nconst CustomPaper = withStyles({\r\n    root: {\r\n        height: 300, \r\n        width: 400,\r\n        padding: 24, \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-evenly',\r\n    }\r\n})(Paper)\r\n\r\nconst LoginContainer = (props) => (\r\n    <div {...props} style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}} />\r\n)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '350px',\r\n      },\r\n    MuiInputLabel: {\r\n        outlined: {\r\n          '&$shrink': {\r\n             transform: 'translate(0px, 0px) scale(0.75)',\r\n            },\r\n        },\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state) => state.kanban.isLoggedIn)\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(username, password))\r\n    }\r\n    \r\n    const history = useHistory()\r\n    \r\n    async function buttonLogin(){\r\n        const item = { username, password }\r\n        let result = await fetch(\"http://localhost:3000/login\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: JSON.stringify(item)\r\n        })\r\n        // localStorage.setItem(\"user-info\", JSON.stringify(result.json()))\r\n        history.push(\"/KanbanBoard\")\r\n    }\r\n\r\n    return (\r\n        isLoggedIn ? (<Redirect to=\"/\" />)\r\n        :\r\n        (\r\n        <Centered>\r\n            <LoginContainer>\r\n                <CustomPaper variant='outlined'>\r\n                    <Typography variant='h6'>Login</Typography>\r\n                    <form onSubmit={handleSubmit} className={classes.root}>\r\n                        <TextField onChange={(e) => setUsername(e.target.value)} fullWidth id=\"outlined-basic\" variant='filled' label='username' />\r\n                        <TextField onChange={(e) => setPassword(e.target.value)} fullWidth variant='filled' label='password' type='password' />\r\n                        <Button onClick={buttonLogin} fullWidth variant='contained' color='secondary' type='submit'>Login</Button>\r\n                    </form>\r\n                </CustomPaper>\r\n            </LoginContainer>\r\n        </Centered>\r\n        )\r\n    )\r\n}\r\n","import './App.css';\nimport { createBrowserHistory } from 'history';\nimport KanbanBoard from './components/board/KanbanBoard';\nimport store from './components/store'\nimport { Provider } from 'react-redux';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport Login from './components/Login';\n\nconst history = createBrowserHistory()\n\nfunction App() {\n  return (\n    <>\n    <Provider store={store}>\n      <Router history={history}>\n        <Switch>\n          {/* <Route path=\"/\" component={KanbanBoard} /> */}\n          <Route path=\"/login\" component={Login} />\n          <ProtectedRoute path=\"/\" component={KanbanBoard} />\n        </Switch>\n      </Router>\n    </Provider>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}